
public class Kelement {
 
	static void FirstKelements(int k, Queue<Integer> queue) 
    { 
        if (queue.isEmpty() == true|| k > queue.size()) 
            return; 
        if (k <= 0) 
            return; 
  
        Stack<Integer> stack = new Stack<Integer>(); 
  
        for (int i = 0; i < k; i++) 
          { 
            stack.push(queue.peek()); 
            queue.remove(); 
         } 
  
        while (!stack.empty()) 
           { 
            queue.add(stack.peek()); 
            stack.pop(); 
           } 

        for (int i = 0; i < queue.size() - k; i++) 
          { 
            queue.add(queue.peek()); 
            queue.remove(); 
          } 
    } 
    
	public static void main(String[] args) 
		{
		 Queue<Integer> queue = new LinkedList<Integer>(); 
		     
		    queue.add(5); 
		    queue.add(4); 
		    queue.add(3); 
		    queue.add(2); 
		    queue.add(1); 
		    FirstKelements(2, queue);
		    for(Integer e : queue)
		    {
		    	System.out.println(e);
		    }
		

	}

}